# -*- coding: utf-8 -*-
"""ipmlab(CSI) 전처리 Moduel

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WDCVDSMYyGj3WwY0RVuDwjayn1caMi7l
"""

import pandas as pd
import numpy as np
from collections import Counter
from datetime import datetime
import csv
import openpyxl
from collections import defaultdict
from datetime import datetime

!pip install -U imbalanced-learn

path = "/content/drive/MyDrive/ipm/CSI_2022_raw.xlsx"
path2='/content/drive/MyDrive/ipm/CSI_2022_preprocessed.xlsx'

df = pd.read_excel(path)
df_pre = pd.read_excel(path2, sheet_name='CSI_분석_DATA(ALL)')

#데이터 전처리 함수

def filter_data_dic(df, required_keys):
    dict_df = df.to_dict(orient='index')
    double_dict = {}
    new_dict = {}
    new_dict2 = {}
    new_dict3= {}

    for i in dict_df:
        key = dict_df[i]['사고번호']
        value = {}
        for j in dict_df[i]:
            if j != '사고번호':
                value[j] = dict_df[i][j]
        double_dict[key] = value

    for key in double_dict:
        if double_dict[key]['사고상태'] in ['확인완료', '확인 및 접수']:
            new_dict[key] = double_dict[key]

    for key, sub_dict in new_dict.items():
        if all(sub_dict.get(sub_key) != "미입력" for sub_key in required_keys):
            new_dict2[key] = sub_dict

    for key, sub_dict in new_dict2.items():
        if all(sub_dict.get(sub_key) != "미입력" for sub_key in ["인적사고종류"]):
            new_dict3[key] = sub_dict

    return new_dict3

required_keys = ['공공민간구분','공종(대분류)','공사비','공종(소분류)','날씨','온도','습도',
                '시설물대분류','시도구분','안전관리계획','공정율','작업자수','프로세스','설계안정성검토','사고일시']

sample_data_result = filter_data_dic(df, required_keys)

#변수 전처리 함수

def filter_feature_dic(sample_data_result,continuous_exception_keys,prediction_required_keys):
    new_dict4 = {}
    new_dict5 = {}
    total_rows = len(sample_data_result)
    keys_to_delete = []
    to_remove = set()


    for sub_key in sample_data_result[202000004639].keys():
        num_missing_values = 0
        for key in sample_data_result:
            if sample_data_result[key][sub_key] == "미입력":
                num_missing_values += 1
        if num_missing_values / total_rows > 0.15:
            continue
        for main_key in sample_data_result:
            if main_key not in new_dict4:
                new_dict4[main_key] = {}
            new_dict4[main_key][sub_key] = sample_data_result[main_key][sub_key]


    total_rows = len(new_dict4)
    keys_to_delete = []

    for sub_key in new_dict4[202000004639].keys():
        num_missing_values = 0
        for key in new_dict4:
            if new_dict4[key][sub_key] is np.nan:
                num_missing_values += 1
        if num_missing_values / total_rows > 0.15:
            continue
        for main_key in new_dict4:
            if main_key not in new_dict5:
                new_dict5[main_key] = {}
            new_dict5[main_key][sub_key] = new_dict4[main_key][sub_key]

    # subkey의 value값들을 저장하는 defaultdict
    key_value_counts = defaultdict(set)

    for key, values in new_dict5.items():
        for subkey, value in values.items():
            key_value_counts[subkey].add(value)

    for subkey, values in key_value_counts.items():
        # subkey의 value값 종류 수가 50개 이상인 경우
        if len(values) >= 50 and subkey not in continuous_exception_keys and subkey not in prediction_required_keys:
            to_remove.add(subkey)

      # 딕셔너리에서 삭제할 subkey를 제거
    for key, values in new_dict5.items():
        for subkey in to_remove:
            values.pop(subkey, None)

    to_remove=set()
    to_remove.update(['사고유발주체','사고유발주체-발주자','사고유발주체-설계자','사고유발주체-시공자','사고유발주체-감리자','사고유발주체-작업자'])

    for key, values in new_dict5.items():
        for subkey in to_remove:
            values.pop(subkey, None)

    return new_dict5

continuous_exception_keys = {'사고일시', '온도','습도'}
prediction_required_keys = {'사고객체(소분류)'}

fillter_feature_result=filter_feature_dic(sample_data_result,continuous_exception_keys,prediction_required_keys)

fillter_feature_result

#변수 추가 함수

def add_feature_dic(fillter_feature_result):
    result={}

    for key, value in fillter_feature_result.items():
        if value['사망자'] >= 1:
            value['사망_부상여부'] = 'Y'
        else:
            value['사망_부상여부'] = 'N'


    for key1, value1 in fillter_feature_result.items():
        if isinstance(value1, dict):
            for key2, value2 in value1.items():
                if '-' in value2:
                    result[key1] = value2.split('-')[1]
                    break

    for key, value in fillter_feature_result.items():
        value['사고월']=result[key]+"월"


 # "사고일시" 컬럼에서 요일 정보 추출하여 "사고요일" 컬럼 추가

    for main_key in fillter_feature_result:
        accident_date = fillter_feature_result[main_key]['사고일시']
        accident_datetime = datetime.strptime(accident_date, '%Y-%m-%d %H:%M:%S')
        accident_weekday = accident_datetime.strftime('%A')

        fillter_feature_result[main_key]['사고요일'] = accident_weekday

    for key, value in fillter_feature_result.items():
        accident_date = value['사고일시']
        accident_datetime = datetime.strptime(accident_date, '%Y-%m-%d %H:%M:%S')
        accident_hour = accident_datetime.hour

        if 0 <= accident_hour < 6:
            value['사고시간'] = "00-06"
        elif 6 <= accident_hour < 8:
            value['사고시간'] = "06-08"
        elif 8 <= accident_hour < 10:
            value['사고시간'] = "08-10"
        elif 10 <= accident_hour < 12:
            value['사고시간'] = "10-12"
        elif 12 <= accident_hour < 14:
            value['사고시간'] = "12-14"
        elif 14 <= accident_hour < 16:
            value['사고시간'] = "14-16"
        elif 16 <= accident_hour < 18:
            value['사고시간'] = "16-18"
        elif 18 <= accident_hour < 20:
            value['사고시간'] = "18-20"
        elif 20 <= accident_hour < 24:
            value['사고시간'] = "20-24"

    return fillter_feature_result

add_feature_result=add_feature_dic(fillter_feature_result)

#데이터 비교 후 변수 제거 함수

def comparison_data_dic(add_feature_result):
    dict_df2 = df_pre.to_dict(orient='index')
    double_dict2 = {}
    missing_keys = set()

    for i in dict_df2:
        key = dict_df2[i]['사고번호']
        value = {}
        for j in dict_df2[i]:
            if j != '사고번호':
                value[j] = dict_df2[i][j]
        double_dict2[key] = value

    # dic1에서 dic2에는 존재하지 않는 서브키를 구합니다.
    for key, sub_dict in add_feature_result.items():
        if key in double_dict2:
            missing_keys.update(sub_key for sub_key in sub_dict.keys() if sub_key not in double_dict2[key])

    missing_keys = list(missing_keys)
    keys_to_remove = missing_keys

    # dic1의 각 메인키에 대해 keys_to_remove에 해당하는 서브키를 삭제합니다.
    for key, sub_dict in add_feature_result.items():
        for sub_key in keys_to_remove:
            if sub_key in sub_dict:
                del sub_dict[sub_key]

    return add_feature_result

final_result=comparison_data_dic(add_feature_result)

final_result

key_count = len(final_result)
key_count

path3='/content/drive/MyDrive/ipm/안전관리수준평가.xlsx'
df_ss = pd.read_excel(path3)

dict_df2 = df_ss.to_dict(orient='index')
double_dict2 = {}


for i in dict_df2:
    key = dict_df2[i]['사고번호']
    value = {}
    for j in dict_df2[i]:
        if j != '사고번호':
            value[j] = dict_df2[i][j]
    double_dict2[key] = value

double_dict2

for main_key in final_result:
    if main_key in double_dict2:
        final_result[main_key].update(double_dict2[main_key])

final_result

"""# **1727에 대해서 라벨링 해줘야함**"""

count=0

for key, value in final_result.items():
    if '안전관리수준평가_발주' not in value:
        count += 1

print("키(key)의 개수:", count)

'''from sklearn.preprocessing import LabelEncoder

# 이중 딕셔너리를 데이터프레임으로 변환
df = pd.DataFrame.from_dict(final_result, orient='index')

# 레이블 인코딩(Label Encoding)을 수행할 열 이름들
category_columns = ['공공민간구분', '날씨','시설물대분류','공종(대분류)','공종(소분류)','시도구분','공사비','공정율','작업자수','프로세스','설계안정성검토','사고월','사고요일','사고시간','안전관리계획','사고객체(대분류)']

# LabelEncoder를 사용하여 각 열에 대해 레이블 인코딩 수행 및 열 추가
label_encoder = LabelEncoder()
for col in category_columns:
    df[col] = label_encoder.fit_transform(df[col])'''

#Label Encoding에서 고유코드로 변경

from collections import OrderedDict

def labeling_dic(final_result):

    for key, value in final_result.items():
        if value['사고상태'] == "확인 및 접수":
            value['사고상태_num'] = 1000
        else:
            value['사고상태_num'] = 2000

    for key, value in final_result.items():
        if value['공공민간구분'] == "공공":
            value['공공민간구분_num'] = 1000
        else:
            value['공공민간구분_num'] = 2000

    for key, value in final_result.items():
        if value['사고월'] == "01월":
            value['사고월_num'] = 1
        elif value['사고월'] == "02월":
            value['사고월_num'] = 2
        elif value['사고월'] == "03월":
            value['사고월_num'] = 3
        elif value['사고월'] == "04월":
            value['사고월_num'] = 4
        elif value['사고월'] == "05월":
             value['사고월_num'] = 5
        elif value['사고월'] == "06월":
             value['사고월_num'] = 6
        elif value['사고월'] == "07월":
             value['사고월_num'] = 7
        elif value['사고월'] == "08월":
            value['사고월_num'] = 8
        elif value['사고월'] == "09월":
             value['사고월_num'] = 9
        elif value['사고월'] == "10월":
             value['사고월_num'] = 10
        elif value['사고월'] == "11월":
            value['사고월_num'] = 11
        elif value['사고월'] == "12월":
             value['사고월_num'] =12

    for key, value in final_result.items():
        if value['사고요일'] == "Sunday":
            value['사고요일_num'] = 1
        elif value['사고요일'] == "Monday":
            value['사고요일_num'] = 2
        elif value['사고요일'] == "Tuesday":
            value['사고요일_num'] = 3
        elif value['사고요일'] == "Wednesday":
            value['사고요일_num'] = 4
        elif value['사고요일'] == "Thursday":
             value['사고요일_num'] = 5
        elif value['사고요일'] == "Friday":
             value['사고요일_num'] = 6
        elif value['사고요일'] == "Saturday":
             value['사고요일_num'] = 7

    for key, value in final_result.items():
        if value['사고시간'] == "00-06":
            value['사고시간_num'] = 6
        elif value['사고시간'] == "06-08":
            value['사고시간_num'] = 8
        elif value['사고시간'] == "08-10":
            value['사고시간_num'] = 10
        elif value['사고시간'] == "10-12":
            value['사고시간_num'] = 12
        elif value['사고시간'] == "12-14":
             value['사고시간_num'] = 14
        elif value['사고시간'] == "14-16":
             value['사고시간_num'] = 16
        elif value['사고시간'] == "16-18":
             value['사고시간_num'] = 18
        elif value['사고시간'] == "18-20":
             value['사고시간_num'] = 20
        elif value['사고시간'] == "20-24":
             value['사고시간_num'] = 24

    for key, value in final_result.items():
        if value['날씨'] == "맑음":
            value['날씨_num'] = 100
        elif value['날씨'] == "강우":
            value['날씨_num'] = 200
        elif value['날씨'] == "흐림":
            value['날씨_num'] = 300
        elif value['날씨'] == "안개":
            value['날씨_num'] = 400
        elif value['날씨'] == "강풍":
             value['날씨_num'] = 500
        elif value['날씨'] == "강설":
             value['날씨_num'] = 600
        elif value['날씨'] == "기타":
             value['날씨_num'] = 9999

    for key, value in final_result.items():
        if value['시설물대분류'] == "토목":
            value['시설물대분류_num'] = 1000
        elif value['시설물대분류'] == "건축":
            value['시설물대분류_num'] = 2000
        elif value['시설물대분류'] == "산업환경설비":
            value['시설물대분류_num'] = 3000
        elif value['시설물대분류'] == "조경":
            value['시설물대분류_num'] = 4000
        elif value['시설물대분류'] == "기타":
             value['시설물대분류_num'] =9000

    for key, value in final_result.items():
        if value['사고객체(대분류)'] == "질병":
            value['사고객체(대분류)_num'] = 1000
        elif value['사고객체(대분류)'] == "가시설":
            value['사고객체(대분류)_num'] = 2100
        elif value['사고객체(대분류)'] == "건설공구":
            value['사고객체(대분류)_num'] = 2200
        elif value['사고객체(대분류)'] == "건설기계":
            value['사고객체(대분류)_num'] = 2300
        elif value['사고객체(대분류)'] == "건설자재":
             value['사고객체(대분류)_num'] =2400
        elif value['사고객체(대분류)'] == "부재":
            value['사고객체(대분류)_num'] = 2500
        elif value['사고객체(대분류)'] == "시설물":
            value['사고객체(대분류)_num'] = 3000
        elif value['사고객체(대분류)'] == "토사 및 암반":
            value['사고객체(대분류)_num'] = 4000
        elif value['사고객체(대분류)'] == "미입력":
            value['사고객체(대분류)_num'] = 9000
        elif value['사고객체(대분류)'] == "기타":
             value['사고객체(대분류)_num'] =9900

    for key, value in final_result.items():
        if value['인적사고종류(대분류)'] == "감전":
            value['인적사고종류(대분류)_num'] = 1
        elif value['인적사고종류(대분류)'] == "교통사고":
            value['인적사고종류(대분류)_num'] = 2
        elif value['인적사고종류(대분류)'] == "깔림":
            value['인적사고종류(대분류)_num'] = 3
        elif value['인적사고종류(대분류)'] == "끼임":
            value['인적사고종류(대분류)_num'] = 4
        elif value['인적사고종류(대분류)'] == "넘어짐":
             value['인적사고종류(대분류)_num'] =5
        elif value['인적사고종류(대분류)'] == "떨어짐":
            value['인적사고종류(대분류)_num'] = 6
        elif value['인적사고종류(대분류)'] == "물체에 맞음":
            value['인적사고종류(대분류)_num'] = 7
        elif value['인적사고종류(대분류)'] == "부딪힘":
            value['인적사고종류(대분류)_num'] = 8
        elif value['인적사고종류(대분류)'] == "없음":
            value['인적사고종류(대분류)_num'] = 9
        elif value['인적사고종류(대분류)'] == "절단, 베임":
             value['인적사고종류(대분류)_num'] =10
        elif value['인적사고종류(대분류)'] == "질병":
            value['인적사고종류(대분류)_num'] = 11
        elif value['인적사고종류(대분류)'] == "질식":
            value['인적사고종류(대분류)_num'] = 12
        elif value['인적사고종류(대분류)'] == "찔림":
            value['인적사고종류(대분류)_num'] = 13
        elif value['인적사고종류(대분류)'] == "화상":
            value['인적사고종류(대분류)_num'] = 14
        elif value['인적사고종류(대분류)'] == "기타":
             value['인적사고종류(대분류)_num'] =9999
        elif value['인적사고종류(대분류)'] == "분류불능":
             value['인적사고종류(대분류)_num'] =15

    for key, value in final_result.items():
        if value['시도구분'] == "서울특별시":
            value['시도구분_num'] = 11000
        elif value['시도구분'] == "부산광역시":
            value['시도구분_num'] = 26000
        elif value['시도구분'] == "대구광역시":
            value['시도구분_num'] = 27000
        elif value['시도구분'] == "인천광역시":
            value['시도구분_num'] = 28000
        elif value['시도구분'] == "광주광역시":
             value['시도구분_num'] =29000
        elif value['시도구분'] == "대전광역시":
            value['시도구분_num'] = 30000
        elif value['시도구분'] == "울산광역시":
            value['시도구분_num'] = 31000
        elif value['시도구분'] == "세종특별자치시":
            value['시도구분_num'] = 36000
        elif value['시도구분'] == "경기도":
            value['시도구분_num'] = 41000
        elif value['시도구분'] == "강원도":
             value['시도구분_num'] =42000
        elif value['시도구분'] == "충청북도":
            value['시도구분_num'] = 43000
        elif value['시도구분'] == "충청남도":
            value['시도구분_num'] = 44000
        elif value['시도구분'] == "전라북도":
            value['시도구분_num'] = 45000
        elif value['시도구분'] == "전라남도":
            value['시도구분_num'] = 46000
        elif value['시도구분'] == "경상북도":
             value['시도구분_num'] =47000
        elif value['시도구분'] == "경상남도":
             value['시도구분_num'] =48000
        elif value['시도구분'] == "제주특별자치도":
             value['시도구분_num'] =50000
        elif value['시도구분'] == "기타":
             value['시도구분_num'] =99999

    for key, value in final_result.items():
        if value['공정율'] == "10% 미만":
            value['공정율_num'] = 9
        elif value['공정율'] == "10~19%":
            value['공정율_num'] = 10
        elif value['공정율'] == "20~29%":
            value['공정율_num'] = 20
        elif value['공정율'] == "30~39%":
            value['공정율_num'] = 30
        elif value['공정율'] == "40~49%":
             value['공정율_num'] =40
        elif value['공정율'] == "50~59%":
            value['공정율_num'] = 50
        elif value['공정율'] == "60~69%":
            value['공정율_num'] =60
        elif value['공정율'] == "70~79%":
            value['공정율_num'] = 70
        elif value['공정율'] == "80~89%":
            value['공정율_num'] =80
        elif value['공정율'] == "90% 이상":
            value['공정율_num'] = 90

    for key, value in final_result.items():
        if value['작업자수'] == "19인 이하":
            value['작업자수_num'] = 19
        elif value['작업자수'] == "20~49인":
            value['작업자수_num'] = 20
        elif value['작업자수'] == "50~99인":
            value['작업자수_num'] = 50
        elif value['작업자수'] == "100~299인":
            value['작업자수_num'] = 100
        elif value['작업자수'] == "300~499인":
             value['작업자수_num'] =300
        elif value['작업자수'] == "500인 이상":
            value['작업자수_num'] = 500

    for key, value in final_result.items():
        if value['안전관리계획'] == "대상현장(1/2종)":
            value['안전관리계획_num'] = 1001
        elif value['안전관리계획'] == "대상현장(1/2종외)":
            value['안전관리계획_num'] = 1002
        elif value['안전관리계획'] == "비대상현장":
            value['안전관리계획_num'] = 9999

    for key, value in final_result.items():
        if value['설계안정성검토'] == "대상":
            value['설계안정성검토_num'] = 1000
        elif value['설계안정성검토'] == "비대상":
            value['설계안정성검토_num'] = 2000

    for key, value in final_result.items():
        if value['공사비'] == "1,000만원 미만":
            value['공사비_num'] = 0
        elif value['공사비'] == "1,000만 ~ 2,000만원 미만":
            value['공사비_num'] = 2000
        elif value['공사비'] == "2,000만 ~ 4,000만원 미만":
            value['공사비_num'] = 4000
        elif value['공사비'] == "4,000만 ~ 1억원 미만":
            value['공사비_num'] = 1
        elif value['공사비'] == "1억 ~ 2억원 미만":
            value['공사비_num'] = 2
        elif value['공사비'] == "2억 ~ 3억원 미만":
             value['공사비_num'] =3
        elif value['공사비'] == "3억 ~ 5억원 미만":
            value['공사비_num'] =5
        elif value['공사비'] == "5억 ~ 10억원 미만":
             value['공사비_num'] =10
        elif value['공사비'] == "10억 ~ 20억원 미만":
            value['공사비_num'] = 20
        elif value['공사비'] == "20억 ~ 50억원 미만":
             value['공사비_num'] =50
        elif value['공사비'] == "50억 ~ 100억원 미만":
            value['공사비_num'] = 100
        elif value['공사비'] == "100억 ~ 150억원 미만":
             value['공사비_num'] =150
        elif value['공사비'] == "150억 ~ 200억원 미만":
            value['공사비_num'] = 200
        elif value['공사비'] == "200억 ~ 300억원 미만":
            value['공사비_num'] = 300
        elif value['공사비'] == "300억 ~ 500억원 미만":
             value['공사비_num'] =500
        elif value['공사비'] == "500억 ~ 1,000억원 미만":
            value['공사비_num'] = 1000
        elif value['공사비'] == "1,000억원 이상":
             value['공사비_num'] =1001
        elif value['공사비'] == "분류불능":
            value['공사비_num'] = 9999

    for key, value in final_result.items():
        if value['프로세스'] == "거치작업":
            value['프로세스_num'] = 1
        elif value['프로세스'] == "고소작업":
            value['프로세스_num'] = 2
        elif value['프로세스'] == "굴착작업":
            value['프로세스_num'] = 3
        elif value['프로세스'] == "도장작업":
            value['프로세스_num'] = 4
        elif value['프로세스'] == "마감작업":
            value['프로세스_num'] = 5
        elif value['프로세스'] == "매설작업":
             value['프로세스_num'] =6
        elif value['프로세스'] == "물뿌리기 작업":
            value['프로세스_num'] = 7
        elif value['프로세스'] == "미입력":
             value['프로세스_num'] =8
        elif value['프로세스'] == "반출작업":
            value['프로세스_num'] = 9
        elif value['프로세스'] == "벌목작업":
            value['프로세스_num'] = 10
        elif value['프로세스'] == "보수 및 교체작업":
            value['프로세스_num'] = 11
        elif value['프로세스'] == "부설 및 다짐작업":
            value['프로세스_num'] = 12
        elif value['프로세스'] == "상차 및 하역작업":
            value['프로세스_num'] = 13
        elif value['프로세스'] == "설비작업":
             value['프로세스_num'] =14
        elif value['프로세스'] == "설치작업":
            value['프로세스_num'] = 15
        elif value['프로세스'] == "쌓기작업":
             value['프로세스_num'] =16
        elif value['프로세스'] == "양생작업":
            value['프로세스_num'] = 17
        elif value['프로세스'] == "양중작업":
            value['프로세스_num'] = 18
        elif value['프로세스'] == "연결작업":
            value['프로세스_num'] = 19
        elif value['프로세스'] == "용접작업":
             value['프로세스_num'] =20
        elif value['프로세스'] == "운반작업":
            value['프로세스_num'] = 21
        elif value['프로세스'] == "이동":
             value['프로세스_num'] =22
        elif value['프로세스'] == "인발작업":
            value['프로세스_num'] = 23
        elif value['프로세스'] == "인양작업":
             value['프로세스_num'] =24
        elif value['프로세스'] == "장약 및 발파작업":
            value['프로세스_num'] = 25
        elif value['프로세스'] == "적재작업":
            value['프로세스_num'] = 26
        elif value['프로세스'] == "전기작업":
            value['프로세스_num'] = 27
        elif value['프로세스'] == "절단작업":
             value['프로세스_num'] =28
        elif value['프로세스'] == "절취작업":
            value['프로세스_num'] = 29
        elif value['프로세스'] == "정리작업":
             value['프로세스_num'] =30
        elif value['프로세스'] == "정비작업":
            value['프로세스_num'] = 31
        elif value['프로세스'] == "조립작업":
             value['프로세스_num'] =32
        elif value['프로세스'] == "준비작업":
            value['프로세스_num'] = 33
        elif value['프로세스'] == "천공작업":
             value['프로세스_num'] =34
        elif value['프로세스'] == "청소작업":
            value['프로세스_num'] = 35
        elif value['프로세스'] == "측량작업":
             value['프로세스_num'] =36
        elif value['프로세스'] == "타설작업":
            value['프로세스_num'] = 37
        elif value['프로세스'] == "항타 및 항발작업":
            value['프로세스_num'] = 38
        elif value['프로세스'] == "해체작업":
            value['프로세스_num'] = 39
        elif value['프로세스'] == "형틀 및 목공":
             value['프로세스_num'] =40
        elif value['프로세스'] == "확인 및 점검작업":
            value['프로세스_num'] = 41
        elif value['프로세스'] == "기타":
             value['프로세스_num'] =9999

    for key, value in final_result.items():
        if value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목":
          value['공종(대분류)_num'] = 1100
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축":
          value['공종(대분류)_num'] = 1200
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="산업설비":
          value['공종(대분류)_num'] = 1310
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기계설비":
          value['공종(대분류)_num'] = 1320
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="전기설비":
          value['공종(대분류)_num'] = 1330
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="통신설비":
          value['공종(대분류)_num'] = 1340
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기타":
          value['공종(대분류)_num'] = 1900
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목":
          value['공종(대분류)_num'] = 2100
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축":
          value['공종(대분류)_num'] = 2200
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="산업설비":
          value['공종(대분류)_num'] = 2310
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기계설비":
          value['공종(대분류)_num'] = 2320
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="전기설비":
          value['공종(대분류)_num'] = 2330
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="통신설비":
          value['공종(대분류)_num'] = 2340
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기타":
          value['공종(대분류)_num'] = 2900
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목":
          value['공종(대분류)_num'] = 3100
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축":
          value['공종(대분류)_num'] = 3200
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="산업설비":
          value['공종(대분류)_num'] = 3310
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기계설비":
          value['공종(대분류)_num'] = 3320
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="전기설비":
          value['공종(대분류)_num'] = 3330
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="통신설비":
          value['공종(대분류)_num'] = 3340
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기타":
          value['공종(대분류)_num'] = 3900
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목":
          value['공종(대분류)_num'] = 4100
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축":
          value['공종(대분류)_num'] = 4200
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="산업설비":
          value['공종(대분류)_num'] = 4310
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기계설비":
          value['공종(대분류)_num'] = 4320
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="전기설비":
          value['공종(대분류)_num'] = 4330
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="통신설비":
          value['공종(대분류)_num'] = 4340
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기타":
          value['공종(대분류)_num'] = 4900
        elif value['시설물대분류']=="기타" and value ['공종(대분류)']=="기타":
          value['공종(대분류)_num'] = 9900


    for key, value in final_result.items():
        if  value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 1101
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="강구조물공사" :
          value['공종(소분류)_num'] = 1102
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사" :
          value['공종(소분류)_num'] = 1103
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사 부대공사" :
          value['공종(소분류)_num'] = 1104
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="교량공사" :
          value['공종(소분류)_num'] = 1105
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="댐 및 제방공사" :
          value['공종(소분류)_num'] = 1106
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="도로 및 포장공사" :
          value['공종(소분류)_num'] = 1107
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="말뚝공사" :
          value['공종(소분류)_num'] = 1108
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="지반개량공사" :
          value['공종(소분류)_num'] = 1109
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="지반조사" :
          value['공종(소분류)_num'] = 1110
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 1111
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="철도 및 궤도공사" :
          value['공종(소분류)_num'] = 1112
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="터널공사" :
          value['공종(소분류)_num'] = 1113
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="토공사" :
          value['공종(소분류)_num'] = 1114
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="프리캐스트 콘크리트공사" :
          value['공종(소분류)_num'] = 1115
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="하천공사" :
          value['공종(소분류)_num'] = 1116
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="항만공사" :
          value['공종(소분류)_num'] = 1117
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 1118
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1199
        elif  value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 1201
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="건축물 부대공사" :
          value['공종(소분류)_num'] = 1203
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="금속공사" :
          value['공종(소분류)_num'] = 1204
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="도장공사" :
          value['공종(소분류)_num'] = 1205
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 1207
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="방수공사" :
          value['공종(소분류)_num'] = 1208
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="타일 및 돌공사" :
          value['공종(소분류)_num'] = 1218
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 1220
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1299
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 1311
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="산업설비공사" :
          value['공종(소분류)_num'] = 1312
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 1318
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1319
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 1321
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기계설비공사" :
          value['공종(소분류)_num'] = 1322
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 1328
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1329
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 1331
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="전기설비공사" :
          value['공종(소분류)_num'] = 1332
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 1338
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1339
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 1341
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="통신설비공사" :
          value['공종(소분류)_num'] = 1342
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 1348
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1349
        elif value['시설물대분류']=="토목" and value ['공종(대분류)']=="기타" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 1999
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 2101
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="강구조물공사" :
          value['공종(소분류)_num'] = 2102
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사" :
          value['공종(소분류)_num'] = 2103
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사 부대공사" :
          value['공종(소분류)_num'] = 2104
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="도로 및 포장공사" :
          value['공종(소분류)_num'] = 2107
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="말뚝공사" :
          value['공종(소분류)_num'] = 2108
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="지반개량공사" :
          value['공종(소분류)_num'] = 2109
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="지반조사" :
          value['공종(소분류)_num'] = 2110
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 2111
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="철도 및 궤도공사" :
          value['공종(소분류)_num'] = 2112
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="토공사" :
          value['공종(소분류)_num'] = 2114
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 2118
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2199
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 2201
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="건축 토공사" :
          value['공종(소분류)_num'] = 2202
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="건축물 부대공사" :
          value['공종(소분류)_num'] = 2203
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="금속공사" :
          value['공종(소분류)_num'] = 2204
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="도장공사" :
          value['공종(소분류)_num'] = 2205
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="목공사" :
          value['공종(소분류)_num'] = 2206
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="미장공사" :
          value['공종(소분류)_num'] = 2207
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="방수공사" :
          value['공종(소분류)_num'] = 2208
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="수장공사" :
          value['공종(소분류)_num'] = 2209
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="조경공사" :
          value['공종(소분류)_num'] = 2210
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="조적공사" :
          value['공종(소분류)_num'] = 2211
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="지반조사" :
          value['공종(소분류)_num'] = 2212
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="지붕 및 홈통공사" :
          value['공종(소분류)_num'] = 2213
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="지정공사" :
          value['공종(소분류)_num'] = 2214
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="창호 및 유리공사" :
          value['공종(소분류)_num'] = 2215
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철골공사" :
          value['공종(소분류)_num'] = 2216
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 2217
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="타일 및 돌공사" :
          value['공종(소분류)_num'] = 2218
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="특수 건축물공사" :
          value['공종(소분류)_num'] = 2219
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 2220
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2299
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 2311
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="산업설비공사" :
          value['공종(소분류)_num'] = 2312
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 2318
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2319
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 2321
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기계설비공사" :
          value['공종(소분류)_num'] = 2322
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 2328
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2329
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 2331
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="전기설비공사" :
          value['공종(소분류)_num'] = 2332
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 2338
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2339
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 2341
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="통신설비공사" :
          value['공종(소분류)_num'] = 2342
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 2348
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2349
        elif value['시설물대분류']=="건축" and value ['공종(대분류)']=="기타" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 2999
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 3101
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사" :
          value['공종(소분류)_num'] = 3103
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사 부대공사" :
          value['공종(소분류)_num'] = 3104
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="도로 및 포장공사" :
          value['공종(소분류)_num'] = 3107
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="말뚝공사" :
          value['공종(소분류)_num'] = 3108
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="지반개량공사" :
          value['공종(소분류)_num'] = 3109
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 3111
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="터널공사" :
          value['공종(소분류)_num'] = 3113
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="토공사" :
          value['공종(소분류)_num'] = 3114
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="항만공사" :
          value['공종(소분류)_num'] = 3117
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 3118
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3199
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 3201
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="건축 토공사" :
          value['공종(소분류)_num'] = 3202
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="건축물 부대공사" :
          value['공종(소분류)_num'] = 3203
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="금속공사" :
          value['공종(소분류)_num'] = 3204
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="도장공사" :
          value['공종(소분류)_num'] = 3205
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="목공사" :
          value['공종(소분류)_num'] = 3206
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="미장공사" :
          value['공종(소분류)_num'] = 3207
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="방수공사" :
          value['공종(소분류)_num'] = 3208
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="수장공사" :
          value['공종(소분류)_num'] = 3209
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="조적공사" :
          value['공종(소분류)_num'] = 3211
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="지붕 및 홈통공사" :
          value['공종(소분류)_num'] = 3213
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철골공사" :
          value['공종(소분류)_num'] = 3216
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 3217
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 3220
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3299
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 3311
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="산업설비공사" :
          value['공종(소분류)_num'] = 3312
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 3318
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3319
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 3321
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기계설비공사" :
          value['공종(소분류)_num'] = 3322
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 3328
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3329
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 3331
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="전기설비공사" :
          value['공종(소분류)_num'] = 3332
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 3338
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3339
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 3341
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="통신설비공사" :
          value['공종(소분류)_num'] = 3342
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 3348
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3349
        elif value['시설물대분류']=="산업환경설비" and value ['공종(대분류)']=="기타" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 3999
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 4101
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="강구조물공사" :
          value['공종(소분류)_num'] = 4102
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사" :
          value['공종(소분류)_num'] = 4103
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="관공사 부대공사" :
          value['공종(소분류)_num'] = 4104
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="도로 및 포장공사" :
          value['공종(소분류)_num'] = 4107
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 4111
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="터널공사" :
          value['공종(소분류)_num'] = 4113
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="토공사" :
          value['공종(소분류)_num'] = 4114
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="하천공사" :
          value['공종(소분류)_num'] = 4116
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 4118
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="토목" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4199
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="건축 토공사" :
          value['공종(소분류)_num'] = 4202
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="조경공사" :
          value['공종(소분류)_num'] = 4210
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철골공사" :
          value['공종(소분류)_num'] = 4216
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="철근콘크리트공사" :
          value['공종(소분류)_num'] = 4217
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 4218
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="건축" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4299
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 4311
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="산업설비공사" :
          value['공종(소분류)_num'] = 4312
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 4318
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="산업설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4319
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 4321
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기계설비공사" :
          value['공종(소분류)_num'] = 4322
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 4328
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기계설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4329
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 4331
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="전기설비공사" :
          value['공종(소분류)_num'] = 4332
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 4338
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="전기설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4339
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="가설공사" :
          value['공종(소분류)_num'] = 4341
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="통신설비공사" :
          value['공종(소분류)_num'] = 4342
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="해체 및 철거공사" :
          value['공종(소분류)_num'] = 4348
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="통신설비" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4349
        elif value['시설물대분류']=="조경" and value ['공종(대분류)']=="기타" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 4999
        elif value['시설물대분류']=="기타" and value ['공종(대분류)']=="기타" and value['공종(소분류)']=="기타" :
          value['공종(소분류)_num'] = 9999


    return  final_result

labeling_result = labeling_dic(final_result)

labeling_result

# subkey의 값 종류 세기
value_counts = {}

for key, value in final_result.items():
    sub_value = value['공종(소분류)']
    if sub_value in value_counts:
        value_counts[sub_value] += 1
    else:
        value_counts[sub_value] = 1

# 결과 출력
for sub_value, count in value_counts.items():
    print(sub_value, count)

# subkey의 값 종류 세기
value_counts = {}

for key, value in labeling_result.items():
    sub_value = value['사고객체(대분류)_num']
    if sub_value in value_counts:
        value_counts[sub_value] += 1
    else:
        value_counts[sub_value] = 1

# 결과 출력
for sub_value, count in value_counts.items():
    print(sub_value, count)

"""# 모델 생성(Decision Tree):사고객체(대분류)"""

from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics
from imblearn.over_sampling import RandomOverSampler

# 특성과 레이블 추출

X = []
y = []

for key, value in labeling_result.items():
    X.append([value['공공민간구분_num'], value['날씨_num'],value['온도'], value['습도'],value['시설물대분류_num'], value['공종(대분류)_num'],value['공종(소분류)_num'], value['시도구분_num'],value['안전관리계획_num']
              , value['공사비_num'], value['공정율_num'],value['작업자수_num'], value['프로세스_num'] , value['설계안정성검토_num'], value['사고월_num'], value['사고요일_num'], value['사고시간_num']])
    y.append(value['사고객체(대분류)_num'])

X, y = RandomOverSampler(random_state=0).fit_resample(X, y)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 의사결정 트리 모델 생성 및 훈련
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = metrics.accuracy_score(y_test, y_pred)
f1_score = metrics.f1_score(y_test, y_pred, average='macro')

print("Accuracy:", accuracy)
print("F1 Score:", f1_score)

counts = y_train.value_counts()
print(counts)

#학습데이터가 데이터개수가 많은 다수 범주에 편향되는 데이터 불균형 문제 발생 => Oversampling

X, y = RandomOverSampler(random_state=0).fit_resample(X, y)

#훈련 세트와 테스트 세트 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 의사결정 트리 분류 모델 생성
base_model = DecisionTreeClassifier()

# 배깅(Bagging) 모델 생성
model = BaggingClassifier(base_estimator=base_model, n_estimators=10, random_state=42)

# 훈련 데이터에 배깅 모델 훈련
model.fit(X_train, y_train)

# 테스트 데이터 예측
y_pred = model.predict(X_test)

# 평가 메트릭 계산
accuracy = metrics.accuracy_score(y_test, y_pred)
f1_score = metrics.f1_score(y_test, y_pred, average='macro')

print("Accuracy:", accuracy)
print("F1 Score:", f1_score)

"""# 모델생성(XGBoost):사고객체(대분류)"""

from sklearn.model_selection import train_test_split
from sklearn import metrics
from imblearn.over_sampling import RandomOverSampler
from xgboost import XGBClassifier
from imblearn.over_sampling import SMOTE
from sklearn.model_selection import GridSearchCV
from sklearn.preprocessing import LabelEncoder
from sklearn.svm import SVC

X = []
y = []

for key, value in labeling_result.items():
    X.append([value['공공민간구분_num'], value['날씨_num'],value['온도'], value['습도'],value['시설물대분류_num'], value['공종(대분류)_num'],value['공종(소분류)_num'], value['시도구분_num'],value['안전관리계획_num']
              , value['공사비_num'], value['공정율_num'],value['작업자수_num'], value['프로세스_num'] , value['설계안정성검토_num'], value['사고월_num'], value['사고요일_num'], value['사고시간_num']])
    y.append(value['사고객체(대분류)'])

X, y = RandomOverSampler(random_state=0).fit_resample(X, y)

label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

#ovesampling =>RandomOverSampler 사용

# 훈련 세트와 테스트 세트 분할
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.3, random_state=42)

# XGBoost 분류 모델 생성(서울대에서 제시한 하이퍼파라미터 적용)
model = XGBClassifier(n_estimators=300, learning_rate=0.1, max_depth=7, objective = 'multi:softprob', eval_metric = 'mlogloss', colsample_bytree=0.75, min_child_weight=1)

# 훈련 데이터에 XGBoost 모델 훈련
model.fit(X_train, y_train)

# 테스트 데이터 예측
y_pred = model.predict(X_test)

# 예측 결과 디코딩하여 원래의 클래스 값으로 변환
y_pred_decoded = label_encoder.inverse_transform(y_pred)

# 평가 메트릭 계산
accuracy = metrics.accuracy_score(y_test, y_pred)
f1_score = metrics.f1_score(y_test, y_pred, average='macro')

print("Accuracy:", accuracy)
print("F1 Score:", f1_score)

'''X = df.drop(['사고상태', '사고일시','인적사고종류(대분류)','사고객체(대분류)','사고객체(소분류)','사망자','부상자','사망_부상여부'], axis=1)
y = df['사고객체(대분류)']

#ovesampling =>RandomOverSampler 사용
X, y = RandomOverSampler(random_state=0).fit_resample(X, y)

# 훈련 세트와 테스트 세트 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# XGBoost 분류 모델 생성
model = XGBClassifier(random_state=42)

# 하이퍼파라미터 그리드 준비
param_grid = {
    'learning_rate': [0.1, 0.01],
    'max_depth': [3, 5, 7],
    'n_estimators': [100, 200, 300],
    'min_child_weight': [1, 3, 5],
    'colsample_bytree': [0.6, 0.8, 1.0]
}

# GridSearchCV를 사용하여 최적의 하이퍼파라미터 탐색
grid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=5, scoring='accuracy')
grid_search.fit(X_train, y_train)

# 최적의 하이퍼파라미터와 그 때의 성능 출력
print("Best Parameters:", grid_search.best_params_)
print("Best Score:", grid_search.best_score_)

# 최적의 하이퍼파라미터로 모델 재훈련
best_model = grid_search.best_estimator_
best_model.fit(X_train, y_train)

# 테스트 데이터 예측
y_pred = best_model.predict(X_test)

# 평가 메트릭 계산
accuracy = metrics.accuracy_score(y_test, y_pred)
f1_score = metrics.f1_score(y_test, y_pred, average='macro')

print("Accuracy:", accuracy)
print("F1 Score:", f1_score) '''